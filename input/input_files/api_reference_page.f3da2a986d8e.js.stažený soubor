var Docs = {

    fragments: "",
    shebang: function () {
        Docs.fragments = window.location.hash.substring(1).split('/');
    },

    toggleEndpointListForResource: function (resource) {
        var elem = $('li#resource_' + Docs.escapeResourceName(resource) + ' ul.endpoints');
        if (elem.is(':visible')) {
            Docs.collapseEndpointListForResource(resource);
        } else {
            Docs.expandEndpointListForResource(resource);
        }
    },

    // Expand resource
    expandEndpointListForResource: function (resource) {
        var resource = Docs.escapeResourceName(resource);
        $('li#resource_' + resource).addClass('active');

        var elem = $('li#resource_' + resource + ' ul.endpoints');
        elem.slideDown();
    },

    // Collapse resource and mark as explicitly closed
    collapseEndpointListForResource: function (resource) {
        var resource = Docs.escapeResourceName(resource);
        $('li#resource_' + resource).removeClass('active');
        var elem = $('li#resource_' + resource + ' ul.endpoints');
        elem.slideUp();
    },


    /* added by lestes */
    jumpToResource: function (div) {
        var elem = $(div);

        $('html, body').animate({
            scrollTop: (elem.offset().top - 100)
        }, 500);
    },

    /* added by mroot */
    toggleOperationForResource: function (methodName) {
        var elem = $('div#' + methodName + "_content");
        // console.log(elem);

        if (elem.is(':visible')) {
            Docs.collapseOperation(elem);
        } else {
            Docs.expandOperation(elem);
        }
        //elem.slideto({highlight: false});
    },

    expandOperationsForResource: function (resource) {
        // Make sure the resource container is open..
        Docs.expandEndpointListForResource(resource);

        $('li#resource_' + Docs.escapeResourceName(resource) + ' li.operation div.content').each(function () {
            Docs.expandOperation($(this));
        });
    },

    collapseOperationsForResource: function (resource) {
        // Make sure the resource container is open..
        Docs.expandEndpointListForResource(resource);

        $('li#resource_' + Docs.escapeResourceName(resource) + ' li.operation div.content').each(function () {
            Docs.collapseOperation($(this));
        });
    },

    escapeResourceName: function (resource) {
        return resource.replace(/[!"#$%&'()*+,.\/:;<=>?@\[\\\]\^`{|}~]/g, "\\$&");
    },

    expandOperation: function (elem) {
        elem.slideDown();
    },

    collapseOperation: function (elem) {
        elem.slideUp();
    },

    /* added by mroot (not used) */
    formatResponse: function (methodName) {
        var prettyJson;

        var elem = $('div#' + 'response_' + methodName + '_body');

        // prettyJson = JSON.stringify(elem.html(), null, "\t").replace(/\n/g, "<br>");
        // elem.html(prettyJson);
    },

    switchToDescription: function (methodName, parameterId) {
        $("div#" + parameterId + "_description").css("display", "block");
        $("div#" + parameterId + "_snippet").css("display", "none");

        $("a#" + parameterId + "_description_menu").addClass("selected");
        $("a#" + parameterId + "_snippet_menu").removeClass("selected");

        $("div#" + methodName + "_content").slideto({highlight: false});
    },

    switchToSnippet: function (methodName, parameterId) {
        $("div#" + parameterId + "_description").css("display", "none");
        $("div#" + parameterId + "_snippet").css("display", "block");

        $("a#" + parameterId + "_description_menu").removeClass("selected");
        $("a#" + parameterId + "_snippet_menu").addClass("selected");

        $("div#" + methodName + "_content").slideto({highlight: false});
    },

    populateSnippet: function (parameterId) {
        var elem = $("textarea#" + parameterId + "_textarea");
        elem.val($("code#" + parameterId + "_json").text());
        elem.height(elem.attr('scrollHeight'));
    }

};

$(document).ready(function () {

    // Determine what endpoint is being requested by default
    Docs.shebang();      

    // If the user is suggesting api details, gather the template
    // and expand the operations as needed

    var sidebar = $('#side-bar li a[api-name="'+ Docs.fragments[0] +'"]');
    var detail = $('.api-ref-mainview div.api_detail[api-name="'+ Docs.fragments[0] +'"]');

    if (Docs.fragments[0] && sidebar.length && detail.length) {
        sidebar.parent().addClass('active');
        detail.show();

        $.get("/api-details/"+Docs.fragments[0], function (result) {
            var data = $.parseJSON(result);
            detail.html(data.html);
            detail.attr("loaded", true);

            // Expand operation
            if (Docs.fragments[1]) {
                var li_content_dom_id = Docs.fragments[0] + "_" + Docs.fragments[1] + "_content"
                Docs.expandOperation($('#' + li_content_dom_id));
            }
        })
    } else {
        sidebar = $('#side-bar li:first-child a');
        detail = $('.api-ref-mainview div.api_detail:first-child');

        sidebar.parent().addClass('active');
        detail.show();

        $.get("/api-details/"+detail.attr("api-name"), function (result) {
            var data = $.parseJSON(result);
            detail.html(data.html);
            detail.attr("loaded", true);
        })
    }

    // The user is navigating around the side menu.
    // Grab the API details from the user's selection
    $(".api_option").click(function () {
        var api = $(this).attr("api-name")
        var detail = $('.api-ref-mainview div.api_detail[api-name="' + api + '"]');
        var loaded = detail.attr("loaded");
        $.each($('.api-ref-mainview div.api_detail'), function() {
            $(this).hide();
        });
        $('.api-ref-mainview div.api_detail[api-name="'+ api +'"]').show();
        if (loaded != "true") {
            $.get("/api-details/" + api, function (result) {
                var data = $.parseJSON(result);
                detail.html(data.html);
                detail.attr("loaded", true);
            });
        }
        window.scrollTo(0, 0)
    })

    // Simulate a click when the user tries submitting the form from the enter key
    $("body").on("submit", ".sandbox", function(e) {
        var apiName = $(this).children(".executeApiNameVal").val()
        var methodName = $(this).children(".executeMethodNameVal").val()
        var getName = $(this).children(".executeMethodGetVal").val()
        $("#execute_" + apiName + "_" + getName + "_" + methodName).trigger("click")
        e.preventDefault()
    });


    $("body").on("click", ".populate_snippet", function() {
        var snippet = $(this).html()
        var method = $(this).attr("method")
        $("#snippet_"+method).val(snippet)
    });

    $("body").on("click", ".toggle_key_include_info", function(e) {
        e.preventDefault();
        $(".key_include_info").toggleClass("hide");
    })
});


function executeRequest(apiName, methodName) {
    // Show the spinner:
    $('#spinner_' + apiName + '_' + methodName).removeClass("hide");

    // set the region_platform based on the text of the region selection option
    $('#region_platform_' + apiName + '_' + methodName).val($('#execute_against_' + apiName + '_' + methodName + ' option:selected').text())

    // hide all of the resposne elements
    $('#response_url_' + apiName + '_' + methodName + '_container').addClass("hide");
    $('#request_headers_' + apiName + '_' + methodName + '_container').addClass("hide");
    $('#response_code_' + apiName + '_' + methodName + '_container').addClass("hide");
    $('#response_headers_' + apiName + '_' + methodName + '_container').addClass("hide");
    $('#response_body_' + apiName + '_' + methodName + '_container').addClass("hide");

    //$('#loader_' + methodName + ',#response_' + methodName).empty()
    $.ajax({
        type: 'POST',
        data: $('#execute_' + apiName + '_' + methodName).parents('form:first').serialize(),
        url: '/api-methods/execute',
        dataType: "json",
        success: function (response, textStatus) {
            if (response.data.data.error)
            {
                $('#response_reqheaders_' + apiName + '_' + methodName).html("<pre>" + JSON.stringify(response.request_headers, null, 4) + "</pre>");
                $('#response_body_' + apiName + '_' + methodName).html("<pre>" + JSON.stringify(response.data.data.error, null, 4) + "</pre>");
                $('#request_headers_' + apiName + '_' + methodName + '_container').removeClass("hide")
                $('#response_body_' + apiName + '_' + methodName + '_container').removeClass("hide")
            }
            else
            {
                url = response.data.url
                $('#response_url_' + apiName + '_' + methodName).html("<a href=" + url + " target='_blank'>" + url + "</a>");
                $('#request_body_' + apiName + '_' + methodName).html("<pre>" + response.data.request_body + "</pre>");
                $('#response_rescode_' + apiName + '_' + methodName).html(JSON.stringify(response.data.response_code, null, 4));
                $('#response_reqheaders_' + apiName + '_' + methodName).html("<pre>" + JSON.stringify(response.request_headers, null, 4) + "</pre>");
                $('#response_resheaders_' + apiName + '_' + methodName).html("<pre>" + JSON.stringify(response.data.response_headers, null, 4) + "</pre>");
                $('#response_body_' + apiName + '_' + methodName).html("<pre>" + JSON.stringify(response.data.data, null, 4) + "</pre>");

                // Show the elements now
                $('#response_url_' + apiName + '_' + methodName + '_container').removeClass("hide");
                $('#request_headers_' + apiName + '_' + methodName + '_container').removeClass("hide");
                $('#response_code_' + apiName + '_' + methodName + '_container').removeClass("hide");
                $('#response_headers_' + apiName + '_' + methodName + '_container').removeClass("hide");
                if (!((typeof response.data.data == 'string' && response.data.data.length == 0) || typeof response.data.data == 'undefined'))
                    $('#response_body_' + apiName + '_' + methodName + '_container').removeClass("hide");
                if (!((typeof response.data.request_body == 'string' && response.data.request_body.length == 0) || typeof response.data.request_body == 'undefined'))
                    $('#request_body_' + apiName + '_' + methodName + '_container').removeClass("hide");

            }

            $('#response_' + apiName + '_' + methodName).removeClass('hide');
            $('#spinner_' + apiName + '_' + methodName).addClass("hide");
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            if (errorThrown == "Forbidden"){
                $('#response_body_' + apiName + '_' + methodName).html("<pre>You have been logged out!</pre>");
            }
            else {
                $('#response_body_' + apiName + '_' + methodName).html("<pre>" + textStatus + ": " + errorThrown + "</pre>");
            }
            
            $('#response_body_' + apiName + '_' + methodName + '_container').removeClass("hide");
            $('#spinner_' + apiName + '_' + methodName).addClass("hide");

        },
        complete: function (XMLHttpRequest, textStatus) {
            $('#spinner_' + apiName + '_' + methodName).addClass("hide");
        }
    });
    return false;
}
